/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AcceptDatetimeFormat : DateTime header
/// DateTime header
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AcceptDatetimeFormat {
    #[serde(rename = "UNIX")]
    Unix,
    #[serde(rename = "RFC3339")]
    Rfc3339,

}

impl std::fmt::Display for AcceptDatetimeFormat {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unix => write!(f, "UNIX"),
            Self::Rfc3339 => write!(f, "RFC3339"),
        }
    }
}

impl Default for AcceptDatetimeFormat {
    fn default() -> AcceptDatetimeFormat {
        Self::Unix
    }
}

