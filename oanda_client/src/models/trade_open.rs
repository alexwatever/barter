/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TradeOpen : A TradeOpen object represents a Trade for an instrument that was opened in an Account. It is found embedded in Transactions that affect the position of an instrument in the Account, specifically the OrderFill Transaction.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeOpen {
    /// The ID of the Trade that was opened
    #[serde(rename = "tradeID", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<String>,
    /// The number of units opened by the Trade
    #[serde(rename = "units", skip_serializing_if = "Option::is_none")]
    pub units: Option<String>,
    /// The average price that the units were opened at.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    /// This is the fee charged for opening the trade if it has a guaranteed Stop Loss Order attached to it.
    #[serde(rename = "guaranteedExecutionFee", skip_serializing_if = "Option::is_none")]
    pub guaranteed_execution_fee: Option<String>,
    #[serde(rename = "clientExtensions", skip_serializing_if = "Option::is_none")]
    pub client_extensions: Option<Box<models::ClientExtensions>>,
    /// The half spread cost for the trade open. This can be a positive or negative value and is represented in the home currency of the Account.
    #[serde(rename = "halfSpreadCost", skip_serializing_if = "Option::is_none")]
    pub half_spread_cost: Option<String>,
    /// The margin required at the time the Trade was created. Note, this is the 'pure' margin required, it is not the 'effective' margin used that factors in the trade risk if a GSLO is attached to the trade.
    #[serde(rename = "initialMarginRequired", skip_serializing_if = "Option::is_none")]
    pub initial_margin_required: Option<String>,
}

impl TradeOpen {
    /// A TradeOpen object represents a Trade for an instrument that was opened in an Account. It is found embedded in Transactions that affect the position of an instrument in the Account, specifically the OrderFill Transaction.
    pub fn new() -> TradeOpen {
        TradeOpen {
            trade_id: None,
            units: None,
            price: None,
            guaranteed_execution_fee: None,
            client_extensions: None,
            half_spread_cost: None,
            initial_margin_required: None,
        }
    }
}

