/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetInstrumentCandles200Response {
    /// The instrument whose Prices are represented by the candlesticks.
    #[serde(rename = "instrument", skip_serializing_if = "Option::is_none")]
    pub instrument: Option<String>,
    /// The granularity of the candlesticks provided.
    #[serde(rename = "granularity", skip_serializing_if = "Option::is_none")]
    pub granularity: Option<Granularity>,
    /// The list of candlesticks that satisfy the request.
    #[serde(rename = "candles", skip_serializing_if = "Option::is_none")]
    pub candles: Option<Vec<models::Candlestick>>,
}

impl GetInstrumentCandles200Response {
    pub fn new() -> GetInstrumentCandles200Response {
        GetInstrumentCandles200Response {
            instrument: None,
            granularity: None,
            candles: None,
        }
    }
}
/// The granularity of the candlesticks provided.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Granularity {
    #[serde(rename = "S5")]
    S5,
    #[serde(rename = "S10")]
    S10,
    #[serde(rename = "S15")]
    S15,
    #[serde(rename = "S30")]
    S30,
    #[serde(rename = "M1")]
    M1,
    #[serde(rename = "M2")]
    M2,
    #[serde(rename = "M4")]
    M4,
    #[serde(rename = "M5")]
    M5,
    #[serde(rename = "M10")]
    M10,
    #[serde(rename = "M15")]
    M15,
    #[serde(rename = "M30")]
    M30,
    #[serde(rename = "H1")]
    H1,
    #[serde(rename = "H2")]
    H2,
    #[serde(rename = "H3")]
    H3,
    #[serde(rename = "H4")]
    H4,
    #[serde(rename = "H6")]
    H6,
    #[serde(rename = "H8")]
    H8,
    #[serde(rename = "H12")]
    H12,
    #[serde(rename = "D")]
    D,
    #[serde(rename = "W")]
    W,
    #[serde(rename = "M")]
    M,
}

impl Default for Granularity {
    fn default() -> Granularity {
        Self::S5
    }
}

