/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Candlestick : The Candlestick representation
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Candlestick {
    /// The start time of the candlestick
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    #[serde(rename = "bid", skip_serializing_if = "Option::is_none")]
    pub bid: Option<Box<models::CandlestickData>>,
    #[serde(rename = "ask", skip_serializing_if = "Option::is_none")]
    pub ask: Option<Box<models::CandlestickData>>,
    #[serde(rename = "mid", skip_serializing_if = "Option::is_none")]
    pub mid: Option<Box<models::CandlestickData>>,
    /// The number of prices created during the time-range represented by the candlestick.
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<i32>,
    /// A flag indicating if the candlestick is complete. A complete candlestick is one whose ending time is not in the future.
    #[serde(rename = "complete", skip_serializing_if = "Option::is_none")]
    pub complete: Option<bool>,
}

impl Candlestick {
    /// The Candlestick representation
    pub fn new() -> Candlestick {
        Candlestick {
            time: None,
            bid: None,
            ask: None,
            mid: None,
            volume: None,
            complete: None,
        }
    }
}

