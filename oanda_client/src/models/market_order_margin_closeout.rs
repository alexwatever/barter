/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketOrderMarginCloseout : Details for the Market Order extensions specific to a Market Order placed that is part of a Market Order Margin Closeout in a client's account
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketOrderMarginCloseout {
    /// The reason the Market Order was created to perform a margin closeout
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<Reason>,
}

impl MarketOrderMarginCloseout {
    /// Details for the Market Order extensions specific to a Market Order placed that is part of a Market Order Margin Closeout in a client's account
    pub fn new() -> MarketOrderMarginCloseout {
        MarketOrderMarginCloseout {
            reason: None,
        }
    }
}
/// The reason the Market Order was created to perform a margin closeout
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Reason {
    #[serde(rename = "MARGIN_CHECK_VIOLATION")]
    MarginCheckViolation,
    #[serde(rename = "REGULATORY_MARGIN_CALL_VIOLATION")]
    RegulatoryMarginCallViolation,
    #[serde(rename = "REGULATORY_MARGIN_CHECK_VIOLATION")]
    RegulatoryMarginCheckViolation,
}

impl Default for Reason {
    fn default() -> Reason {
        Self::MarginCheckViolation
    }
}

