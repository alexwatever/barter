/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransactionHeartbeat : A TransactionHeartbeat object is injected into the Transaction stream to ensure that the HTTP connection remains active.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionHeartbeat {
    /// The string \"HEARTBEAT\"
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The ID of the most recent Transaction created for the Account
    #[serde(rename = "lastTransactionID", skip_serializing_if = "Option::is_none")]
    pub last_transaction_id: Option<String>,
    /// The date/time when the TransactionHeartbeat was created.
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
}

impl TransactionHeartbeat {
    /// A TransactionHeartbeat object is injected into the Transaction stream to ensure that the HTTP connection remains active.
    pub fn new() -> TransactionHeartbeat {
        TransactionHeartbeat {
            r#type: None,
            last_transaction_id: None,
            time: None,
        }
    }
}

