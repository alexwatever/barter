/*
 * OANDA v20 REST API
 *
 * The full OANDA v20 REST API Specification. This specification defines how to interact with v20 Accounts, Trades, Orders, Pricing and more.
 *
 * The version of the OpenAPI document: 3.0.25
 * Contact: api@oanda.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FundingReason : The reason that an Account is being funded.
/// The reason that an Account is being funded.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FundingReason {
    #[serde(rename = "CLIENT_FUNDING")]
    ClientFunding,
    #[serde(rename = "ACCOUNT_TRANSFER")]
    AccountTransfer,
    #[serde(rename = "DIVISION_MIGRATION")]
    DivisionMigration,
    #[serde(rename = "SITE_MIGRATION")]
    SiteMigration,
    #[serde(rename = "ADJUSTMENT")]
    Adjustment,

}

impl std::fmt::Display for FundingReason {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ClientFunding => write!(f, "CLIENT_FUNDING"),
            Self::AccountTransfer => write!(f, "ACCOUNT_TRANSFER"),
            Self::DivisionMigration => write!(f, "DIVISION_MIGRATION"),
            Self::SiteMigration => write!(f, "SITE_MIGRATION"),
            Self::Adjustment => write!(f, "ADJUSTMENT"),
        }
    }
}

impl Default for FundingReason {
    fn default() -> FundingReason {
        Self::ClientFunding
    }
}

